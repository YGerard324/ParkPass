{
  "version": 3,
  "sources": ["../../../src/common/_internal/integer-regexp.ts"],
  "sourcesContent": ["const numericSymbols = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n];\n\nexport const MAX_RADIX_INCLUSIVE = 36;\nexport const MIN_RADIX_INCLUSIVE = 2;\n\nconst integerRegExps: Array<RegExp | undefined> = Array.from({ length: numericSymbols.length });\n\nexport function getIsIntegerRegExp(radix: number): RegExp {\n  if (radix < MIN_RADIX_INCLUSIVE || radix > MAX_RADIX_INCLUSIVE) {\n    throw new RangeError(\n      `parseSafeInteger() radix argument must be between ${MIN_RADIX_INCLUSIVE} and ${MAX_RADIX_INCLUSIVE}`,\n    );\n  }\n\n  if (!integerRegExps[radix]) {\n    /**\n     * Get all characters that are valid digits in this base (radix)\n     *\n     * Example: if radix = 16, characterSet will include [0, 1, ..., e, f]\n     */\n    const characterSet = numericSymbols.slice(0, radix);\n\n    /**\n     * Construct a regex that matches whether the input is a valid integer in this radix\n     *\n     * Example, if radix = 2, the regex will be:\n     * /^-?[01]+$/i\n     *\n     * \"i\" for case insensitivity\n     */\n    integerRegExps[radix] = new RegExp(`^-?[${characterSet.join('')}]+$`, 'i');\n  }\n\n  return integerRegExps[radix]!;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,MAAM,sBAAsB;AAC5B,MAAM,sBAAsB;AAEnC,MAAM,iBAA4C,MAAM,KAAK,EAAE,QAAQ,eAAe,OAAO,CAAC;AAEvF,SAAS,mBAAmB,OAAuB;AACxD,MAAI,QAAQ,uBAAuB,QAAQ,qBAAqB;AAC9D,UAAM,IAAI;AAAA,MACR,qDAAqD,2BAA2B;AAAA,IAClF;AAAA,EACF;AAEA,MAAI,CAAC,eAAe,KAAK,GAAG;AAM1B,UAAM,eAAe,eAAe,MAAM,GAAG,KAAK;AAUlD,mBAAe,KAAK,IAAI,IAAI,OAAO,OAAO,aAAa,KAAK,EAAE,QAAQ,GAAG;AAAA,EAC3E;AAEA,SAAO,eAAe,KAAK;AAC7B;",
  "names": []
}
