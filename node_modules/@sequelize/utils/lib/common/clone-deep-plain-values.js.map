{
  "version": 3,
  "sources": ["../../src/common/clone-deep-plain-values.ts"],
  "sourcesContent": ["import { pojo } from './pojo.js';\nimport { isAnyObject } from './predicates/is-any-object.js';\n\n/**\n * This function is used to create a deep clone of plain values.\n * It can handle arrays, plain objects, and primitives.\n * For non-plain objects, it either transfers them as is or throws an error, based on the `transferUnclonables` flag.\n *\n * @param value The value to be cloned.\n * @param transferUnclonables A flag indicating whether to transfer unclonable values as is.\n *                            If false, the function will throw an error when encountering an unclonable value.\n * @returns The cloned value.\n * @throws Throws an error if the function encounters a non-plain object and `transferUnclonables` is false.\n */\nexport function cloneDeepPlainValues<T>(value: T, transferUnclonables?: boolean): T {\n  if (Array.isArray(value)) {\n    return value.map(val => cloneDeepPlainValues(val, transferUnclonables)) as T;\n  }\n\n  if (isAnyObject(value)) {\n    const prototype = Object.getPrototypeOf(value);\n\n    if (prototype !== null && prototype !== Object.prototype) {\n      if (transferUnclonables) {\n        return value;\n      }\n\n      throw new Error('This function can only clone plain objects, arrays and primitives');\n    }\n\n    const out = pojo() as T;\n    for (const key of Object.keys(value) as Array<keyof T>) {\n      out[key] = cloneDeepPlainValues(value[key], transferUnclonables);\n    }\n\n    return out;\n  }\n\n  return value;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB;AACrB,2BAA4B;AAarB,SAAS,qBAAwB,OAAU,qBAAkC;AAClF,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,MAAM,IAAI,SAAO,qBAAqB,KAAK,mBAAmB,CAAC;AAAA,EACxE;AAEA,UAAI,kCAAY,KAAK,GAAG;AACtB,UAAM,YAAY,OAAO,eAAe,KAAK;AAE7C,QAAI,cAAc,QAAQ,cAAc,OAAO,WAAW;AACxD,UAAI,qBAAqB;AACvB,eAAO;AAAA,MACT;AAEA,YAAM,IAAI,MAAM,mEAAmE;AAAA,IACrF;AAEA,UAAM,UAAM,kBAAK;AACjB,eAAW,OAAO,OAAO,KAAK,KAAK,GAAqB;AACtD,UAAI,GAAG,IAAI,qBAAqB,MAAM,GAAG,GAAG,mBAAmB;AAAA,IACjE;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;",
  "names": []
}
