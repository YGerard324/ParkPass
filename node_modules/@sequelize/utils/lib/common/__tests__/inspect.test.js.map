{
  "version": 3,
  "sources": ["../../../src/common/__tests__/inspect.test.ts"],
  "sourcesContent": ["import { inspect } from '@sequelize/utils';\nimport { expect } from 'chai';\n\ndescribe('inspect function', () => {\n  it('supports primitives', () => {\n    expect(inspect(123)).to.equal('123');\n    expect(inspect(123n)).to.equal('123n');\n    expect(inspect(null)).to.equal('null');\n    // eslint-disable-next-line unicorn/no-useless-undefined -- false positive\n    expect(inspect(undefined)).to.equal('undefined');\n    expect(inspect(true)).to.equal('true');\n    expect(inspect(false)).to.equal('false');\n    expect(inspect(Symbol('test'))).to.equal('Symbol(test)');\n    expect(inspect('test')).to.equal('\"test\"');\n  });\n\n  it('returns a function representation when the input is a function', () => {\n    const input = function test() {};\n\n    const result = inspect(input);\n    expect(result).to.equal('[function test]');\n  });\n\n  it('supports anonymous functions', () => {\n    const result = inspect(() => {});\n    expect(result).to.equal('[function (anonymous)]');\n  });\n\n  it('returns an object representation when the input is an object', () => {\n    expect(inspect({ key: 'value' })).to.equal('[object Object]');\n    expect(inspect(new Date())).to.equal('[object Date]');\n  });\n});\n"],
  "mappings": ";AAAA,mBAAwB;AACxB,kBAAuB;AAEvB,SAAS,oBAAoB,MAAM;AACjC,KAAG,uBAAuB,MAAM;AAC9B,gCAAO,sBAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,KAAK;AACnC,gCAAO,sBAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,MAAM;AACrC,gCAAO,sBAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,MAAM;AAErC,gCAAO,sBAAQ,MAAS,CAAC,EAAE,GAAG,MAAM,WAAW;AAC/C,gCAAO,sBAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,MAAM;AACrC,gCAAO,sBAAQ,KAAK,CAAC,EAAE,GAAG,MAAM,OAAO;AACvC,gCAAO,sBAAQ,OAAO,MAAM,CAAC,CAAC,EAAE,GAAG,MAAM,cAAc;AACvD,gCAAO,sBAAQ,MAAM,CAAC,EAAE,GAAG,MAAM,QAAQ;AAAA,EAC3C,CAAC;AAED,KAAG,kEAAkE,MAAM;AACzE,UAAM,QAAQ,SAAS,OAAO;AAAA,IAAC;AAE/B,UAAM,aAAS,sBAAQ,KAAK;AAC5B,4BAAO,MAAM,EAAE,GAAG,MAAM,iBAAiB;AAAA,EAC3C,CAAC;AAED,KAAG,gCAAgC,MAAM;AACvC,UAAM,aAAS,sBAAQ,MAAM;AAAA,IAAC,CAAC;AAC/B,4BAAO,MAAM,EAAE,GAAG,MAAM,wBAAwB;AAAA,EAClD,CAAC;AAED,KAAG,gEAAgE,MAAM;AACvE,gCAAO,sBAAQ,EAAE,KAAK,QAAQ,CAAC,CAAC,EAAE,GAAG,MAAM,iBAAiB;AAC5D,gCAAO,sBAAQ,oBAAI,KAAK,CAAC,CAAC,EAAE,GAAG,MAAM,eAAe;AAAA,EACtD,CAAC;AACH,CAAC;",
  "names": []
}
