{
  "version": 3,
  "sources": ["../../../src/common/parsers/parse-finite-number.ts"],
  "sourcesContent": ["import type { Parser } from '../_internal/build-parser.js';\nimport { buildNullBasedParser } from '../_internal/build-parser.js';\nimport { inspect } from '../inspect.js';\nimport { isBigInt } from '../predicates/is-big-int.js';\nimport { isValidNumberSyntax } from '../predicates/is-valid-number-syntax.js';\n\nfunction parseFiniteNumberInternal(value: string | bigint): number | null {\n  if (isBigInt(value)) {\n    if (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {\n      return null;\n    }\n\n    return Number(value);\n  }\n\n  /**\n   * radix has not been implemented because there is no built-in method we can rely on,\n   * if it turns out we need it, feel free to implement one.\n   */\n\n  if (!isValidNumberSyntax(value)) {\n    return null;\n  }\n\n  const parsed = Number(value);\n  if (!Number.isFinite(parsed)) {\n    return null;\n  }\n\n  return parsed;\n}\n\n/**\n * Parses a string as a number in base 10.\n *\n * Unlike {@link parseSafeInteger}, this function does not support specifying the radix, it is always base 10.\n * This parser can produce numbers that are not safely representable with the JS number type\n * This method will never produce infinite numbers.\n *\n * This method supports the scientific notation (e.g., 5e1 produces 50)\n *\n * If you are parsing integers, prefer {@link parseSafeInteger} or {@link parseBigInt} instead.\n *\n * @param value The string to parse as a floating point number\n * @returns null if the input is not a base 10 number\n */\nexport const parseFiniteNumber: Parser<[value: string | bigint], number> = buildNullBasedParser(\n  parseFiniteNumberInternal,\n  value => `Cannot convert ${inspect(value)} to a finite number.`,\n);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAqC;AACrC,qBAAwB;AACxB,wBAAyB;AACzB,oCAAoC;AAEpC,SAAS,0BAA0B,OAAuC;AACxE,UAAI,4BAAS,KAAK,GAAG;AACnB,QAAI,QAAQ,OAAO,oBAAoB,QAAQ,OAAO,kBAAkB;AACtE,aAAO;AAAA,IACT;AAEA,WAAO,OAAO,KAAK;AAAA,EACrB;AAOA,MAAI,KAAC,mDAAoB,KAAK,GAAG;AAC/B,WAAO;AAAA,EACT;AAEA,QAAM,SAAS,OAAO,KAAK;AAC3B,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAgBO,MAAM,wBAA8D;AAAA,EACzE;AAAA,EACA,WAAS,sBAAkB,wBAAQ,KAAK;AAC1C;",
  "names": []
}
