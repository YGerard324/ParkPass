{
  "version": 3,
  "sources": ["../../../../src/common/predicates/__tests__/is-valid-number-syntax.test.ts"],
  "sourcesContent": ["import { isValidNumberSyntax } from '@sequelize/utils';\nimport { expect } from 'chai';\n\ndescribe('isValidNumberSyntax', () => {\n  it('returns true for valid base 10 numbers', () => {\n    expect(isValidNumberSyntax('10')).to.equal(true);\n    expect(isValidNumberSyntax('0.1')).to.equal(true);\n    expect(isValidNumberSyntax('-10')).to.equal(true);\n    expect(isValidNumberSyntax('1e5')).to.equal(true);\n    expect(isValidNumberSyntax('-1e5')).to.equal(true);\n  });\n\n  it('returns false for invalid base 10 numbers', () => {\n    expect(isValidNumberSyntax('abc')).to.equal(false);\n    expect(isValidNumberSyntax('10a')).to.equal(false);\n    expect(isValidNumberSyntax('1.1.1')).to.equal(false);\n    expect(isValidNumberSyntax('1e1e1')).to.equal(false);\n    expect(isValidNumberSyntax('')).to.equal(false);\n    expect(isValidNumberSyntax('-')).to.equal(false);\n    expect(isValidNumberSyntax(' 12')).to.equal(false);\n    expect(isValidNumberSyntax('1_2')).to.equal(false);\n  });\n\n  it('does not support non-finite numbers', () => {\n    expect(isValidNumberSyntax('Infinity')).to.equal(false);\n    expect(isValidNumberSyntax('-Infinity')).to.equal(false);\n    expect(isValidNumberSyntax('NaN')).to.equal(false);\n  });\n});\n"],
  "mappings": ";AAAA,mBAAoC;AACpC,kBAAuB;AAEvB,SAAS,uBAAuB,MAAM;AACpC,KAAG,0CAA0C,MAAM;AACjD,gCAAO,kCAAoB,IAAI,CAAC,EAAE,GAAG,MAAM,IAAI;AAC/C,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,IAAI;AAChD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,IAAI;AAChD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,IAAI;AAChD,gCAAO,kCAAoB,MAAM,CAAC,EAAE,GAAG,MAAM,IAAI;AAAA,EACnD,CAAC;AAED,KAAG,6CAA6C,MAAM;AACpD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK;AACjD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK;AACjD,gCAAO,kCAAoB,OAAO,CAAC,EAAE,GAAG,MAAM,KAAK;AACnD,gCAAO,kCAAoB,OAAO,CAAC,EAAE,GAAG,MAAM,KAAK;AACnD,gCAAO,kCAAoB,EAAE,CAAC,EAAE,GAAG,MAAM,KAAK;AAC9C,gCAAO,kCAAoB,GAAG,CAAC,EAAE,GAAG,MAAM,KAAK;AAC/C,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK;AACjD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK;AAAA,EACnD,CAAC;AAED,KAAG,uCAAuC,MAAM;AAC9C,gCAAO,kCAAoB,UAAU,CAAC,EAAE,GAAG,MAAM,KAAK;AACtD,gCAAO,kCAAoB,WAAW,CAAC,EAAE,GAAG,MAAM,KAAK;AACvD,gCAAO,kCAAoB,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK;AAAA,EACnD,CAAC;AACH,CAAC;",
  "names": []
}
