{
  "version": 3,
  "sources": ["../../../src/common/predicates/is-error.ts"],
  "sourcesContent": ["import type {\n  AssertionFunction,\n  NegatedAssertionFunction,\n} from '../_internal/build-predicate-function.js';\nimport { buildAssertionFunction, toBe } from '../_internal/build-predicate-function.js';\n\nconst tuple = buildAssertionFunction((value: unknown): value is Error => {\n  return value instanceof Error;\n}, toBe('an instance of Error'));\n\n/**\n * Returns true if the value is a JS built-in Error instance, or one of its child classes.\n *\n * @param value The value to compare.\n */\nexport const isError: AssertionFunction<Error> = tuple[0];\nexport const isNotError: NegatedAssertionFunction<Error> = tuple[1];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,sCAA6C;AAE7C,MAAM,YAAQ,wDAAuB,CAAC,UAAmC;AACvE,SAAO,iBAAiB;AAC1B,OAAG,sCAAK,sBAAsB,CAAC;AAOxB,MAAM,UAAoC,MAAM,CAAC;AACjD,MAAM,aAA8C,MAAM,CAAC;",
  "names": []
}
