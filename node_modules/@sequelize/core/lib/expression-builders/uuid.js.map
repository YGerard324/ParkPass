{
  "version": 3,
  "sources": ["../../src/expression-builders/uuid.ts"],
  "sourcesContent": ["import crypto from 'node:crypto';\nimport { v1 as generateUuidV1 } from 'uuid';\nimport type { AbstractDialect } from '../abstract-dialect/dialect.js';\nimport { DialectAwareFn } from './dialect-aware-fn.js';\n\nexport class SqlUuidV4 extends DialectAwareFn {\n  get maxArgCount() {\n    return 0;\n  }\n\n  get minArgCount() {\n    return 0;\n  }\n\n  supportsJavaScript(): boolean {\n    return true;\n  }\n\n  applyForJavaScript(): unknown {\n    return crypto.randomUUID();\n  }\n\n  supportsDialect(dialect: AbstractDialect): boolean {\n    return dialect.supports.uuidV4Generation;\n  }\n\n  applyForDialect(dialect: AbstractDialect): string {\n    return dialect.queryGenerator.getUuidV4FunctionCall();\n  }\n}\n\nexport class SqlUuidV1 extends DialectAwareFn {\n  get maxArgCount() {\n    return 0;\n  }\n\n  get minArgCount() {\n    return 0;\n  }\n\n  supportsJavaScript(): boolean {\n    return true;\n  }\n\n  applyForJavaScript(): unknown {\n    return generateUuidV1();\n  }\n\n  supportsDialect(dialect: AbstractDialect): boolean {\n    return dialect.supports.uuidV1Generation;\n  }\n\n  applyForDialect(dialect: AbstractDialect): string {\n    return dialect.queryGenerator.getUuidV1FunctionCall();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB;AACnB,kBAAqC;AAErC,8BAA+B;AAExB,MAAM,kBAAkB,uCAAe;AAAA,EAC5C,IAAI,cAAc;AAChB,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO;AAAA,EACT;AAAA,EAEA,qBAA8B;AAC5B,WAAO;AAAA,EACT;AAAA,EAEA,qBAA8B;AAC5B,WAAO,mBAAAA,QAAO,WAAW;AAAA,EAC3B;AAAA,EAEA,gBAAgB,SAAmC;AACjD,WAAO,QAAQ,SAAS;AAAA,EAC1B;AAAA,EAEA,gBAAgB,SAAkC;AAChD,WAAO,QAAQ,eAAe,sBAAsB;AAAA,EACtD;AACF;AAEO,MAAM,kBAAkB,uCAAe;AAAA,EAC5C,IAAI,cAAc;AAChB,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO;AAAA,EACT;AAAA,EAEA,qBAA8B;AAC5B,WAAO;AAAA,EACT;AAAA,EAEA,qBAA8B;AAC5B,eAAO,YAAAC,IAAe;AAAA,EACxB;AAAA,EAEA,gBAAgB,SAAmC;AACjD,WAAO,QAAQ,SAAS;AAAA,EAC1B;AAAA,EAEA,gBAAgB,SAAkC;AAChD,WAAO,QAAQ,eAAe,sBAAsB;AAAA,EACtD;AACF;",
  "names": ["crypto", "generateUuidV1"]
}
