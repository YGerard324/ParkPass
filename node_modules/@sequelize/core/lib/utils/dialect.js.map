{
  "version": 3,
  "sources": ["../../src/utils/dialect.ts"],
  "sourcesContent": ["import { isPlainObject, isString } from '@sequelize/utils';\nimport { randomUUID } from 'node:crypto';\nimport NodeUtil from 'node:util';\nimport { v1 as uuidv1 } from 'uuid';\nimport * as DataTypes from '../abstract-dialect/data-types.js';\nimport { DialectAwareFn } from '../expression-builders/dialect-aware-fn.js';\nimport { noDataTypesUuid } from './deprecations.js';\n\nexport function toDefaultValue(value: unknown): unknown {\n  if (value instanceof DialectAwareFn) {\n    if (value.supportsJavaScript()) {\n      return value.applyForJavaScript();\n    }\n\n    return undefined;\n  }\n\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.AbstractDataType) {\n      return tmp.toSql();\n    }\n\n    return tmp;\n  }\n\n  if (value instanceof DataTypes.UUIDV1) {\n    noDataTypesUuid();\n\n    return uuidv1();\n  }\n\n  if (value instanceof DataTypes.UUIDV4) {\n    noDataTypesUuid();\n\n    return randomUUID();\n  }\n\n  if (value instanceof DataTypes.NOW) {\n    return new Date();\n  }\n\n  if (Array.isArray(value)) {\n    return [...value];\n  }\n\n  if (isPlainObject(value)) {\n    return { ...(value as object) };\n  }\n\n  return value;\n}\n\nexport function quoteIdentifier(identifier: string, leftTick: string, rightTick: string): string {\n  if (!isString(identifier)) {\n    throw new Error(\n      `quoteIdentifier received a non-string identifier: ${NodeUtil.inspect(identifier)}`,\n    );\n  }\n\n  // TODO [engine:node@>14]: drop regexp, use replaceAll with a string instead.\n  const leftTickRegExp = new RegExp(`\\\\${leftTick}`, 'g');\n\n  if (leftTick === rightTick) {\n    return leftTick + identifier.replace(leftTickRegExp, leftTick + leftTick) + rightTick;\n  }\n\n  const rightTickRegExp = new RegExp(`\\\\${rightTick}`, 'g');\n\n  return (\n    leftTick +\n    identifier\n      .replace(leftTickRegExp, leftTick + leftTick)\n      .replace(rightTickRegExp, rightTick + rightTick) +\n    rightTick\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwC;AACxC,yBAA2B;AAC3B,uBAAqB;AACrB,kBAA6B;AAC7B,gBAA2B;AAC3B,8BAA+B;AAC/B,0BAAgC;AAEzB,SAAS,eAAe,OAAyB;AACtD,MAAI,iBAAiB,wCAAgB;AACnC,QAAI,MAAM,mBAAmB,GAAG;AAC9B,aAAO,MAAM,mBAAmB;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,MAAM,MAAM;AAClB,QAAI,eAAe,UAAU,kBAAkB;AAC7C,aAAO,IAAI,MAAM;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAEA,MAAI,iBAAiB,UAAU,QAAQ;AACrC,6CAAgB;AAEhB,eAAO,YAAAA,IAAO;AAAA,EAChB;AAEA,MAAI,iBAAiB,UAAU,QAAQ;AACrC,6CAAgB;AAEhB,eAAO,+BAAW;AAAA,EACpB;AAEA,MAAI,iBAAiB,UAAU,KAAK;AAClC,WAAO,oBAAI,KAAK;AAAA,EAClB;AAEA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,CAAC,GAAG,KAAK;AAAA,EAClB;AAEA,UAAI,4BAAc,KAAK,GAAG;AACxB,WAAO,EAAE,GAAI,MAAiB;AAAA,EAChC;AAEA,SAAO;AACT;AAEO,SAAS,gBAAgB,YAAoB,UAAkB,WAA2B;AAC/F,MAAI,KAAC,uBAAS,UAAU,GAAG;AACzB,UAAM,IAAI;AAAA,MACR,qDAAqD,iBAAAC,QAAS,QAAQ,UAAU;AAAA,IAClF;AAAA,EACF;AAGA,QAAM,iBAAiB,IAAI,OAAO,KAAK,YAAY,GAAG;AAEtD,MAAI,aAAa,WAAW;AAC1B,WAAO,WAAW,WAAW,QAAQ,gBAAgB,WAAW,QAAQ,IAAI;AAAA,EAC9E;AAEA,QAAM,kBAAkB,IAAI,OAAO,KAAK,aAAa,GAAG;AAExD,SACE,WACA,WACG,QAAQ,gBAAgB,WAAW,QAAQ,EAC3C,QAAQ,iBAAiB,YAAY,SAAS,IACjD;AAEJ;",
  "names": ["uuidv1", "NodeUtil"]
}
