{
  "version": 3,
  "sources": ["../src/import-models.ts"],
  "sourcesContent": ["import { isPlainObject } from '@sequelize/utils';\nimport glob from 'fast-glob';\nimport uniq from 'lodash/uniq';\nimport { pathToFileURL } from 'node:url';\nimport type { ModelStatic } from './model.js';\nimport { isModelStatic } from './utils/model-utils.js';\n\ntype ModelMatch = (path: string, exportName: string, exportValue: ModelStatic) => boolean;\n\n/**\n * Imports all model classes exported in the file matching the specified globs.\n * Useful when setting the \"models\" option in the Sequelize constructor.\n *\n * @param globPaths\n * @param modelMatch\n */\nexport async function importModels(\n  globPaths: string | string[],\n  modelMatch?: ModelMatch,\n): Promise<ModelStatic[]> {\n  if (Array.isArray(globPaths)) {\n    const promises: Array<Promise<ModelStatic[]>> = [];\n\n    for (const globPath of globPaths) {\n      promises.push(importModels(globPath, modelMatch));\n    }\n\n    return uniq((await Promise.all(promises)).flat(1));\n  }\n\n  const promises: Array<Promise<ModelStatic[]>> = [];\n  for (const path of await glob(globPaths)) {\n    const url = pathToFileURL(path).href;\n    promises.push(importModelNoGlob(url, modelMatch));\n  }\n\n  return uniq((await Promise.all(promises)).flat(1));\n}\n\nasync function importModelNoGlob(url: string, modelMatch?: ModelMatch): Promise<ModelStatic[]> {\n  let module = await import(url);\n  // When importing a CJS file, sometimes only the default export is available,\n  // as named exports depend on the file's exports being statically analyzable by node.\n  // The default export contains the contents of the file's `module.exports`\n  if (module.default && isPlainObject(module.default)) {\n    module = { ...module.default, ...module };\n  }\n\n  return Object.keys(module)\n    .filter(exportName => {\n      if (!isModelStatic(module[exportName])) {\n        return false;\n      }\n\n      if (modelMatch) {\n        return modelMatch(url, exportName, module[exportName]);\n      }\n\n      return true;\n    })\n    .map(exportName => module[exportName]);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8B;AAC9B,uBAAiB;AACjB,kBAAiB;AACjB,sBAA8B;AAE9B,yBAA8B;AAW9B,eAAsB,aACpB,WACA,YACwB;AACxB,MAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,UAAMA,YAA0C,CAAC;AAEjD,eAAW,YAAY,WAAW;AAChC,MAAAA,UAAS,KAAK,aAAa,UAAU,UAAU,CAAC;AAAA,IAClD;AAEA,eAAO,YAAAC,UAAM,MAAM,QAAQ,IAAID,SAAQ,GAAG,KAAK,CAAC,CAAC;AAAA,EACnD;AAEA,QAAM,WAA0C,CAAC;AACjD,aAAW,QAAQ,UAAM,iBAAAE,SAAK,SAAS,GAAG;AACxC,UAAM,UAAM,+BAAc,IAAI,EAAE;AAChC,aAAS,KAAK,kBAAkB,KAAK,UAAU,CAAC;AAAA,EAClD;AAEA,aAAO,YAAAD,UAAM,MAAM,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC;AACnD;AAEA,eAAe,kBAAkB,KAAa,YAAiD;AAC7F,MAAIE,UAAS,MAAM,OAAO;AAI1B,MAAIA,QAAO,eAAW,4BAAcA,QAAO,OAAO,GAAG;AACnD,IAAAA,UAAS,EAAE,GAAGA,QAAO,SAAS,GAAGA,QAAO;AAAA,EAC1C;AAEA,SAAO,OAAO,KAAKA,OAAM,EACtB,OAAO,gBAAc;AACpB,QAAI,KAAC,kCAAcA,QAAO,UAAU,CAAC,GAAG;AACtC,aAAO;AAAA,IACT;AAEA,QAAI,YAAY;AACd,aAAO,WAAW,KAAK,YAAYA,QAAO,UAAU,CAAC;AAAA,IACvD;AAEA,WAAO;AAAA,EACT,CAAC,EACA,IAAI,gBAAcA,QAAO,UAAU,CAAC;AACzC;",
  "names": ["promises", "uniq", "glob", "module"]
}
