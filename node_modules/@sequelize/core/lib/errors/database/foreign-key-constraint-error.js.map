{
  "version": 3,
  "sources": ["../../../src/errors/database/foreign-key-constraint-error.ts"],
  "sourcesContent": ["import { useErrorCause } from '../../utils/deprecations.js';\nimport type { DatabaseErrorSubclassOptions } from '../database-error';\nimport { DatabaseError } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nexport class ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions = {}) {\n    if ('parent' in options) {\n      useErrorCause();\n    }\n\n    const parent = options.cause ?? options.parent ?? { sql: '', name: '', message: '' };\n\n    super(parent);\n    this.name = 'SequelizeForeignKeyConstraintError';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B;AAE9B,4BAA8B;AAEvB,IAAK,mBAAL,kBAAKA,sBAAL;AACL,EAAAA,kBAAA,YAAS;AACT,EAAAA,kBAAA,WAAQ;AAFE,SAAAA;AAAA,GAAA;AAgBL,MAAM,kCAAkC,oCAAc;AAAA,EAC3D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,UAA2E,CAAC,GAAG;AACzF,QAAI,YAAY,SAAS;AACvB,6CAAc;AAAA,IAChB;AAEA,UAAM,SAAS,QAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS,GAAG;AAEnF,UAAM,MAAM;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,UAAU,QAAQ;AAAA,EACzB;AACF;",
  "names": ["RelationshipType"]
}
