{
  "version": 3,
  "sources": ["../../../src/errors/database/exclusion-constraint-error.ts"],
  "sourcesContent": ["import { useErrorCause } from '../../utils/deprecations.js';\nimport type { DatabaseErrorSubclassOptions } from '../database-error';\nimport { DatabaseError } from '../database-error';\n\ninterface ExclusionConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when an exclusion constraint is violated in the database\n */\nexport class ExclusionConstraintError extends DatabaseError {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(options: DatabaseErrorSubclassOptions & ExclusionConstraintErrorOptions = {}) {\n    if ('parent' in options) {\n      useErrorCause();\n    }\n\n    const parent = options.cause ?? options.parent ?? { sql: '', name: '', message: '' };\n\n    super(parent);\n    this.message = options.message || parent.message;\n    this.name = 'SequelizeExclusionConstraintError';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B;AAE9B,4BAA8B;AAWvB,MAAM,iCAAiC,oCAAc;AAAA,EAC1D;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,UAA0E,CAAC,GAAG;AACxF,QAAI,YAAY,SAAS;AACvB,6CAAc;AAAA,IAChB;AAEA,UAAM,SAAS,QAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS,GAAG;AAEnF,UAAM,MAAM;AACZ,SAAK,UAAU,QAAQ,WAAW,OAAO;AACzC,SAAK,OAAO;AACZ,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA,EACvB;AACF;",
  "names": []
}
