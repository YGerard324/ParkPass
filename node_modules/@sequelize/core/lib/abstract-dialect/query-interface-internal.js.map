{
  "version": 3,
  "sources": ["../../src/abstract-dialect/query-interface-internal.ts"],
  "sourcesContent": ["import assert from 'node:assert';\nimport { QueryTypes } from '../query-types.js';\nimport type { QueryRawOptions, Sequelize } from '../sequelize.js';\nimport type { AbstractDialect } from './dialect.js';\nimport type { AbstractQueryGenerator } from './query-generator.js';\nimport type { FetchDatabaseVersionOptions } from './query-interface.types.js';\n\n/**\n * The methods in this class are not part of the public API.\n */\nexport class AbstractQueryInterfaceInternal {\n  readonly #dialect: AbstractDialect;\n\n  get #sequelize(): Sequelize {\n    return this.#dialect.sequelize;\n  }\n\n  get #queryGenerator(): AbstractQueryGenerator {\n    return this.#dialect.queryGenerator;\n  }\n\n  constructor(dialect: AbstractDialect) {\n    this.#dialect = dialect;\n  }\n\n  async fetchDatabaseVersionRaw<T extends object>(\n    options?: FetchDatabaseVersionOptions,\n  ): Promise<T> {\n    const out = await this.#sequelize.queryRaw<T>(this.#queryGenerator.versionQuery(), {\n      ...options,\n      type: QueryTypes.SELECT,\n      plain: true,\n    });\n\n    assert(out != null);\n\n    return out;\n  }\n\n  async executeQueriesSequentially(queries: string[], options?: QueryRawOptions): Promise<unknown> {\n    const results = [];\n    for (const query of queries) {\n      // eslint-disable-next-line no-await-in-loop\n      const result = await this.#sequelize.queryRaw(query, { ...options });\n      results.push(result);\n    }\n\n    return results;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB;AACnB,yBAA2B;AASpB,MAAM,+BAA+B;AAAA,EACjC;AAAA,EAET,IAAI,aAAwB;AAC1B,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,IAAI,kBAA0C;AAC5C,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,YAAY,SAA0B;AACpC,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAM,wBACJ,SACY;AACZ,UAAM,MAAM,MAAM,KAAK,WAAW,SAAY,KAAK,gBAAgB,aAAa,GAAG;AAAA,MACjF,GAAG;AAAA,MACH,MAAM,8BAAW;AAAA,MACjB,OAAO;AAAA,IACT,CAAC;AAED,2BAAAA,SAAO,OAAO,IAAI;AAElB,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,2BAA2B,SAAmB,SAA6C;AAC/F,UAAM,UAAU,CAAC;AACjB,eAAW,SAAS,SAAS;AAE3B,YAAM,SAAS,MAAM,KAAK,WAAW,SAAS,OAAO,EAAE,GAAG,QAAQ,CAAC;AACnE,cAAQ,KAAK,MAAM;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AACF;",
  "names": ["assert"]
}
