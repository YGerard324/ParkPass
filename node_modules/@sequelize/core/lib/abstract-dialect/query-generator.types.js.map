{
  "version": 3,
  "sources": ["../../src/abstract-dialect/query-generator.types.ts"],
  "sourcesContent": ["import type { Deferrable } from '../deferrable';\nimport type { BaseSqlExpression } from '../expression-builders/base-sql-expression';\nimport type { Literal } from '../expression-builders/literal';\nimport type { Filterable, IndexHintable, ModelStatic, ReferentialAction } from '../model';\nimport type { ModelDefinition } from '../model-definition.js';\nimport type { TableHints } from '../table-hints';\nimport type { TransactionType } from '../transaction';\nimport type { AddLimitOffsetOptions } from './query-generator.internal-types.js';\nimport type { TableName } from './query-interface.js';\nimport type { ConstraintType } from './query-interface.types';\nimport type { WhereOptions } from './where-sql-builder-types';\n\nexport type TableOrModel = TableName | ModelStatic<any> | ModelDefinition<any>;\n\n// keep CREATE_DATABASE_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface CreateDatabaseQueryOptions {\n  charset?: string;\n  collate?: string;\n  ctype?: string;\n  encoding?: string;\n  template?: string;\n}\n\n// keep LIST_DATABASES_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface ListDatabasesQueryOptions {\n  skip?: string[];\n}\n\n// keep CREATE_SCHEMA_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface CreateSchemaQueryOptions {\n  authorization?: string | Literal;\n  charset?: string;\n  collate?: string;\n  comment?: string;\n  ifNotExists?: boolean;\n  replace?: boolean;\n}\n\n// keep DROP_SCHEMA_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface DropSchemaQueryOptions {\n  cascade?: boolean;\n  ifExists?: boolean;\n}\n\nexport interface ListSchemasQueryOptions {\n  /** List of schemas to exclude from output */\n  skip?: string[];\n}\n\n// keep DROP_TABLE_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface DropTableQueryOptions {\n  cascade?: boolean;\n}\n\n// Keeep LIST_TABLES_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface ListTablesQueryOptions {\n  schema?: string;\n}\n\n// keep RENAME_TABLE_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface RenameTableQueryOptions {\n  changeSchema?: boolean;\n}\n\n// Keep TRUNCATE_TABLE_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface TruncateTableQueryOptions {\n  cascade?: boolean;\n  restartIdentity?: boolean;\n}\n\n// keep REMOVE_COLUMN_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface RemoveColumnQueryOptions {\n  cascade?: boolean;\n  ifExists?: boolean;\n}\n\nexport interface BaseConstraintQueryOptions {\n  name?: string;\n  type: ConstraintType;\n  fields: Array<string | BaseSqlExpression | { attribute?: string; name: string }>;\n}\n\nexport interface AddCheckConstraintQueryOptions extends BaseConstraintQueryOptions {\n  type: 'CHECK';\n  where?: WhereOptions<any>;\n}\nexport interface AddDefaultConstraintQueryOptions extends BaseConstraintQueryOptions {\n  type: 'DEFAULT';\n  defaultValue?: unknown;\n}\n\nexport interface AddUniqueConstraintQueryOptions extends BaseConstraintQueryOptions {\n  type: 'UNIQUE';\n  deferrable?: Deferrable;\n}\n\nexport interface AddPrimaryKeyConstraintQueryOptions extends BaseConstraintQueryOptions {\n  type: 'PRIMARY KEY';\n  deferrable?: Deferrable;\n}\n\nexport interface AddForeignKeyConstraintQueryOptions extends BaseConstraintQueryOptions {\n  type: 'FOREIGN KEY';\n  references:\n    | {\n        table: TableOrModel;\n        field?: string;\n        fields: string[];\n      }\n    | {\n        table: TableOrModel;\n        field: string;\n        fields?: string[];\n      };\n  onDelete?: ReferentialAction;\n  onUpdate?: ReferentialAction;\n  deferrable?: Deferrable;\n}\n\nexport type AddConstraintQueryOptions =\n  | AddCheckConstraintQueryOptions\n  | AddUniqueConstraintQueryOptions\n  | AddDefaultConstraintQueryOptions\n  | AddPrimaryKeyConstraintQueryOptions\n  | AddForeignKeyConstraintQueryOptions;\n\nexport interface GetConstraintSnippetQueryOptions {\n  name?: string;\n  type: ConstraintType;\n  fields: Array<\n    | string\n    | BaseSqlExpression\n    | {\n        /**\n         * @deprecated use `name` instead\n         */\n        attribute?: string;\n        name: string;\n      }\n  >;\n  where?: WhereOptions<any>;\n  defaultValue?: unknown;\n  references?:\n    | {\n        table: TableOrModel;\n        field?: string;\n        fields: string[];\n      }\n    | {\n        table: TableOrModel;\n        field: string;\n        fields?: string[];\n      };\n  onDelete?: ReferentialAction;\n  onUpdate?: ReferentialAction;\n  deferrable?: Deferrable;\n}\n\n// keep REMOVE_CONSTRAINT_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface RemoveConstraintQueryOptions {\n  ifExists?: boolean;\n  cascade?: boolean;\n}\n\n// keep SHOW_CONSTRAINTS_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface ShowConstraintsQueryOptions {\n  columnName?: string;\n  constraintName?: string;\n  constraintType?: ConstraintType;\n}\n\n// keep START_TRANSACTION_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface StartTransactionQueryOptions {\n  readOnly?: boolean;\n  transactionName?: string;\n  transactionType?: TransactionType | undefined;\n}\n\nexport interface QuoteTableOptions extends IndexHintable {\n  alias: boolean | string;\n  tableHints?: TableHints[] | undefined;\n}\n\nexport interface BulkDeleteQueryOptions<TAttributes = any>\n  extends AddLimitOffsetOptions,\n    Filterable<TAttributes> {}\n\n// keep REMOVE_INDEX_QUERY_SUPPORTABLE_OPTIONS updated when modifying this\nexport interface RemoveIndexQueryOptions {\n  concurrently?: boolean;\n  ifExists?: boolean;\n  cascade?: boolean;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
